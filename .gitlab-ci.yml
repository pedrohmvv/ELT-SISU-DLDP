# Pipeline stages
stages:
  - Code Analysis
  - Deploy

image: python:3.9-slim

services:
  - docker:20.10.16-dind

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

linting:
  stage: Code Analysis
  before_script:
    - python --version
    - python -m venv venv
    - source venv/bin/activate
    - pip install pylint flake8 autopep8 --cache-dir deps_cache
  script:
    - autopep8 -rai dags
    - flake8 dags --exit-zero
    - pylint --fail-under=8 dags
  tags:
    - padrao
  cache:
    paths:
      - deps_cache
      - venv/
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH != "develop"'
  allow_failure: true

deploy:
  stage: Deploy
  before_script:
    - apt update && apt install git -y
    - mkdir ~/.ssh/
    - echo $CI_SERVER_HOST > ~/.ssh/known_hosts
    - echo "${SSH_PUSH_CI}" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - git config user.email "contato@lema.ufpb.br"
    - git config user.name "ci-bot"
    - git remote remove gitlab_origin || true
    - git remote add gitlab_origin "git@gitlab.com:lema_ufpb/projetos/airflow/mec-sisu.git"
    - git config core.sshCommand 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
  script:
    - rm -f ./dags/.release || true
    - echo $(python -c "import time;print(time.strftime('%d/%m/%Y, %H:%M:%S', time.localtime()))") > ./dags/.release
    - git add .
    - git commit -m "Add New Version"
    - git push gitlab_origin HEAD:main -o ci.skip
  tags:
    - padrao
  only:
    - main
